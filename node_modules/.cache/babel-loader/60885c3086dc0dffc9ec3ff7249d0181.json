{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Lauren-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // react-router components\n\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\"; // @mui material components\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\"; // Material Dashboard 2 React example components\n\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\"; // Material Dashboard 2 React themes\n\nimport theme from \"assets/theme\"; // Material Dashboard 2 React Dark Mode themes\n// Material Dashboard 2 React routes\n\nimport routes from \"routes\"; // Material Dashboard 2 React contexts\n\nimport { useMaterialUIController, setMiniSidenav, setOpenConfigurator } from \"context\"; // Images\n\nimport brandWhite from \"assets/images/hertz-light-logo.png\";\nimport brandDark from \"assets/images/hertz-dark-logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    direction,\n    layout,\n    openConfigurator,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode\n  } = controller;\n  const [onMouseEnter, setOnMouseEnter] = useState(false);\n  const {\n    pathname\n  } = useLocation(); // Setting the dir attribute for the body element\n\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]); // Setting page scroll to 0 when changing the route\n\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n\n  const getRoutes = allRoutes => allRoutes.map(route => {\n    if (route.collapse) {\n      return getRoutes(route.collapse);\n    }\n\n    if (route.route) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: route.route,\n        element: route.component\n      }, route.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    }\n\n    return null;\n  });\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkMode ? themeDark : theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XKW96oRIzfKz5BHgP7IqlrNKDhs=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lauren/Lauren-demo/src/App.js"],"names":["useState","useEffect","Routes","Route","Navigate","useLocation","ThemeProvider","CssBaseline","Icon","MDBox","Sidenav","Configurator","theme","routes","useMaterialUIController","setMiniSidenav","setOpenConfigurator","brandWhite","brandDark","App","controller","dispatch","miniSidenav","direction","layout","openConfigurator","sidenavColor","transparentSidenav","whiteSidenav","darkMode","onMouseEnter","setOnMouseEnter","pathname","document","body","setAttribute","documentElement","scrollTop","scrollingElement","getRoutes","allRoutes","map","route","collapse","component","key","themeDark"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\n\n// @mui material components\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport Sidenav from \"examples/Sidenav\";\nimport Configurator from \"examples/Configurator\";\n\n// Material Dashboard 2 React themes\nimport theme from \"assets/theme\";\n\n// Material Dashboard 2 React Dark Mode themes\n\n// Material Dashboard 2 React routes\nimport routes from \"routes\";\n\n// Material Dashboard 2 React contexts\nimport {\n  useMaterialUIController,\n  setMiniSidenav,\n  setOpenConfigurator,\n} from \"context\";\n\n// Images\nimport brandWhite from \"assets/images/hertz-light-logo.png\";\nimport brandDark from \"assets/images/hertz-dark-logo.png\";\n\nexport default function App() {\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    direction,\n    layout,\n    openConfigurator,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n  } = controller;\n  const [onMouseEnter, setOnMouseEnter] = useState(false);\n  const { pathname } = useLocation();\n\n  // Setting the dir attribute for the body element\n  useEffect(() => {\n    document.body.setAttribute(\"dir\", direction);\n  }, [direction]);\n\n  // Setting page scroll to 0 when changing the route\n  useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n  }, [pathname]);\n\n  const getRoutes = (allRoutes) =>\n    allRoutes.map((route) => {\n      if (route.collapse) {\n        return getRoutes(route.collapse);\n      }\n\n      if (route.route) {\n        return (\n          <Route\n            exact\n            path={route.route}\n            element={route.component}\n            key={route.key}\n          />\n        );\n      }\n      return null;\n    });\n\n  return (\n    <ThemeProvider theme={darkMode ? themeDark : theme}>\n      <CssBaseline />\n      <Routes>\n        {getRoutes(routes)}\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\n      </Routes>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}