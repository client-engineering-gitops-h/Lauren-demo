{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/Github/Hertz-demo/src/examples/Sidenav/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Material Dashboard 2 React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useEffect } from \"react\"; // react-router-dom components\n\nimport { useLocation, NavLink } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\"; // Material Dashboard 2 React example components\n\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\"; // Custom styles for the Sidenav\n\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\"; // Material Dashboard 2 PRO React context\n\nimport { useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidenav(_ref) {\n  _s();\n\n  let {\n    color,\n    brand,\n    brandName,\n    routes,\n    ...rest\n  } = _ref;\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n    sidenavColor\n  } = controller;\n  const location = useLocation();\n  const collapseName = location.pathname.replace(\"/\", \"\");\n  let textColor = \"white\";\n\n  if (transparentSidenav || whiteSidenav && !darkMode) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\n    }\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n\n\n    window.addEventListener(\"resize\", handleMiniSidenav); // Call the handleMiniSidenav function to set the state with the initial value.\n\n    handleMiniSidenav(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]); // Render all the routes from the routes.js (All the visible items on the Sidenav)\n\n  const renderRoutes = routes.map(_ref2 => {\n    let {\n      type,\n      name,\n      icon,\n      title,\n      noCollapse,\n      key,\n      href,\n      route\n    } = _ref2;\n    let returnValue;\n\n    if (type === \"collapse\") {\n      returnValue = href ? /*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        sx: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName,\n          noCollapse: noCollapse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: route,\n        children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this);\n    } else if (type === \"title\") {\n      returnValue = /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: textColor,\n        display: \"block\",\n        variant: \"caption\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        pl: 3,\n        mt: 2,\n        mb: 1,\n        ml: 1,\n        children: title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this);\n    } else if (type === \"divider\") {\n      returnValue = /*#__PURE__*/_jsxDEV(Divider, {\n        light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this);\n    }\n\n    return returnValue;\n  });\n  return /*#__PURE__*/_jsxDEV(SidenavRoot, { ...rest,\n    variant: \"permanent\",\n    ownerState: {\n      transparentSidenav,\n      whiteSidenav,\n      miniSidenav,\n      darkMode\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      pt: 3,\n      pb: 1,\n      px: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"block\",\n          xl: \"none\"\n        },\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        p: 1.625,\n        onClick: closeSidenav,\n        sx: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        component: NavLink,\n        to: \"/\",\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [brand && /*#__PURE__*/_jsxDEV(MDBox, {\n          component: \"img\",\n          src: brand,\n          alt: \"Brand\",\n          width: \"6rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          width: !brandName && \"100%\",\n          sx: theme => sidenavLogoLabel(theme, {\n            miniSidenav\n          }),\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            component: \"h6\",\n            variant: \"button\",\n            fontWeight: \"medium\",\n            color: textColor,\n            children: brandName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: renderRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of Sidenav\n\n\n_s(Sidenav, \"pAAzfKHdOiPo6xdxG49or8YH0LQ=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n\n_c = Sidenav;\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\"\n}; // Typechecking props for the Sidenav\n\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Sidenav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["/Users/andrew/Documents/Github/Hertz-demo/src/examples/Sidenav/index.js"],"names":["useEffect","useLocation","NavLink","PropTypes","List","Divider","Link","Icon","MDBox","MDTypography","MDButton","SidenavCollapse","SidenavRoot","sidenavLogoLabel","useMaterialUIController","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","Sidenav","color","brand","brandName","routes","rest","controller","dispatch","miniSidenav","transparentSidenav","whiteSidenav","darkMode","sidenavColor","location","collapseName","pathname","replace","textColor","closeSidenav","handleMiniSidenav","window","innerWidth","addEventListener","removeEventListener","renderRoutes","map","type","name","icon","title","noCollapse","key","href","route","returnValue","textDecoration","xs","xl","cursor","fontWeight","theme","defaultProps","propTypes","oneOf","string","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect } from \"react\";\n\n// react-router-dom components\nimport { useLocation, NavLink } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\n\n// Custom styles for the Sidenav\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\";\n\n// Material Dashboard 2 PRO React context\nimport {\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n} from \"context\";\n\nfunction Sidenav({ color, brand, brandName, routes, ...rest }) {\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n    sidenavColor,\n  } = controller;\n  const location = useLocation();\n  const collapseName = location.pathname.replace(\"/\", \"\");\n\n  let textColor = \"white\";\n\n  if (transparentSidenav || (whiteSidenav && !darkMode)) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(\n        dispatch,\n        window.innerWidth < 1200 ? false : transparentSidenav\n      );\n      setWhiteSidenav(\n        dispatch,\n        window.innerWidth < 1200 ? false : whiteSidenav\n      );\n    }\n\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleMiniSidenav);\n\n    // Call the handleMiniSidenav function to set the state with the initial value.\n    handleMiniSidenav();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]);\n\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\n  const renderRoutes = routes.map(\n    ({ type, name, icon, title, noCollapse, key, href, route }) => {\n      let returnValue;\n\n      if (type === \"collapse\") {\n        returnValue = href ? (\n          <Link\n            href={href}\n            key={key}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            sx={{ textDecoration: \"none\" }}\n          >\n            <SidenavCollapse\n              name={name}\n              icon={icon}\n              active={key === collapseName}\n              noCollapse={noCollapse}\n            />\n          </Link>\n        ) : (\n          <NavLink key={key} to={route}>\n            <SidenavCollapse\n              name={name}\n              icon={icon}\n              active={key === collapseName}\n            />\n          </NavLink>\n        );\n      } else if (type === \"title\") {\n        returnValue = (\n          <MDTypography\n            key={key}\n            color={textColor}\n            display=\"block\"\n            variant=\"caption\"\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n            pl={3}\n            mt={2}\n            mb={1}\n            ml={1}\n          >\n            {title}\n          </MDTypography>\n        );\n      } else if (type === \"divider\") {\n        returnValue = (\n          <Divider\n            key={key}\n            light={\n              (!darkMode && !whiteSidenav && !transparentSidenav) ||\n              (darkMode && !transparentSidenav && whiteSidenav)\n            }\n          />\n        );\n      }\n\n      return returnValue;\n    }\n  );\n\n  return (\n    <SidenavRoot\n      {...rest}\n      variant=\"permanent\"\n      ownerState={{ transparentSidenav, whiteSidenav, miniSidenav, darkMode }}\n    >\n      <MDBox pt={3} pb={1} px={4} textAlign=\"center\">\n        <MDBox\n          display={{ xs: \"block\", xl: \"none\" }}\n          position=\"absolute\"\n          top={0}\n          right={0}\n          p={1.625}\n          onClick={closeSidenav}\n          sx={{ cursor: \"pointer\" }}\n        >\n          <MDTypography variant=\"h6\" color=\"secondary\">\n            <Icon sx={{ fontWeight: \"bold\" }}>close</Icon>\n          </MDTypography>\n        </MDBox>\n        <MDBox component={NavLink} to=\"/\" display=\"flex\" alignItems=\"center\">\n          {brand && (\n            <MDBox component=\"img\" src={brand} alt=\"Brand\" width=\"6rem\" />\n          )}\n          <MDBox\n            width={!brandName && \"100%\"}\n            sx={(theme) => sidenavLogoLabel(theme, { miniSidenav })}\n          >\n            <MDTypography\n              component=\"h6\"\n              variant=\"button\"\n              fontWeight=\"medium\"\n              color={textColor}\n            >\n              {brandName}\n            </MDTypography>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n      <Divider\n        light={\n          (!darkMode && !whiteSidenav && !transparentSidenav) ||\n          (darkMode && !transparentSidenav && whiteSidenav)\n        }\n      />\n      <List>{renderRoutes}</List>\n    </SidenavRoot>\n  );\n}\n\n// Setting default values for the props of Sidenav\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\",\n};\n\n// Typechecking props for the Sidenav\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"dark\",\n  ]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Sidenav;\n"]},"metadata":{},"sourceType":"module"}